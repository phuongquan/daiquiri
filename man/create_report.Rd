% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{create_report}
\alias{create_report}
\title{Load data and generate report}
\usage{
create_report(
  x,
  fieldtypes,
  textfile_contains_columnnames = TRUE,
  override_columnnames = FALSE,
  na = c("", "NULL"),
  aggregation_timeunit = "day",
  save_directory = ".",
  save_filename = NULL,
  showprogress = TRUE,
  log_directory = NULL
)
}
\arguments{
\item{x}{Either a data frame or a string containing full or relative path of file containing data to load}

\item{fieldtypes}{\code{\link{fieldtypes}} object specifying names and types of fields (columns) in source data. See also \link{availablefieldtypes}.}

\item{textfile_contains_columnnames}{If the data to be loaded is a text file, does the first row contain the column names? Default = TRUE}

\item{override_columnnames}{If FALSE, column names must exist in data frame or header row of file and must match
the names specified in fieldtypes exactly. If TRUE, column names in source will be replaced with names in fieldtypes
specification. The specification must therefore contain the columns in the correct order. Default = FALSE}

\item{na}{vector containing strings that should be interpreted as missing values, Default = \code{c("","NULL")}.}

\item{aggregation_timeunit}{Unit of time to aggregate over. Specify one of "day", "week", "month", "quarter", "year". The "week" option is Monday-based. Default = "day"}

\item{save_directory}{String specifying directory in which to save the report. Default is current directory.}

\item{save_filename}{String specifying filename for the report, excluding any file extension.
If no filename is supplied (i.e. filename = NULL), one will be automatically generated with the format daiquiri_report_YYMMDD_HHMMSS.}

\item{showprogress}{Print progress to console. Default = TRUE}

\item{log_directory}{String specifying directory in which to save log file. If no directory is supplied, progress is not logged.}
}
\value{
A list containing information relating to the supplied parameters as well as the resulting \code{sourcedata} and \code{aggregatedata} objects.
}
\description{
Accepts record-level data from a dataframe or csv file, generates a collection of time series for each column, and saves a report to disk.
}
\examples{
daiqobj <- create_report(
  system.file("extdata", "abx2014.csv", package = "daiquiri"),
  fieldtypes = fieldtypes(PrescriptionID = ft_uniqueidentifier(),
    PrescriptionDate = ft_timepoint(),
    AdmissionDate = ft_datetime(includes_time = FALSE),
    Drug = ft_freetext(),
    Dose = ft_numeric(),
    DoseUnit = ft_categorical(),
    PatientID = ft_ignore(),
    SourceSystem = ft_categorical(aggregate_by_each_category=TRUE)),
  textfile_contains_columnnames = TRUE,
  override_columnnames = FALSE,
  na = c("","NULL"),
  aggregation_timeunit = "day",
  save_directory = ".",
  save_filename = "abx2014report",
  showprogress = TRUE,
  log_directory = NULL
)
}
\seealso{
\code{\link{fieldtypes}}, \code{\link{availablefieldtypes}}
}
